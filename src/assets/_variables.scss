// Switch to enable/disable some things to speed up development.
$devMode: true;



/*
@description
Values for our $media-query map.
*/
$media-query-values: (
    "mobile-landscape": 650px,
    "tablet": 750px,
    "tablet-landscape": 900px,
    "desktop": 1200px,
    "large-desktop": 1450px,
    "x-large-desktop": 2000px
);




/*
Define the breakpoint which we consider to be "desktop". This is useful for making sure structural elements have the same breakpoints.
*/
$desktopBreakpoint: "tablet-landscape";


/*
Define the breakpoint on the PDP in which the main structural layout changes.
NOTE: Not every breakpoint on this page should use this value, only ones that change the overall structure. This note is applicable for similar page defined breakpoints.
*/
$pdpBreakpoint: "mobile-landscape";




/*
@description
Complete media queries.
*/
$media-query: (
    "mobile-landscape":
    unquote('(min-width: #{map-get($media-query-values, "mobile-landscape")})'),
    "tablet":
    unquote('(min-width: #{map-get($media-query-values, "tablet")})'),
    "tablet-landscape":
    unquote('(min-width: #{map-get($media-query-values, "tablet-landscape")})'),
    "desktop":
    unquote('(min-width: #{map-get($media-query-values, "desktop")})'),
    "large-desktop":
    unquote('(min-width: #{map-get($media-query-values, "large-desktop")})'),
    "x-large-desktop":
    unquote('(min-width: #{map-get($media-query-values, "x-large-desktop")})')
);



/*
@description
Complete max-width media queries. These source the same $media-query-values, except they subtract 1 from its value. We do this to prevent min and max-width media queries from conflicting.
*/
$media-query-max: (
    "mobile-landscape":
    unquote('(max-width: #{map-get($media-query-values, "mobile-landscape") - 1})'),
    "tablet":
    unquote('(max-width: #{map-get($media-query-values, "tablet") - 1})'),
    "tablet-landscape":
    unquote('(max-width: #{map-get($media-query-values, "tablet-landscape") - 1})'),
    "desktop":
    unquote('(max-width: #{map-get($media-query-values, "desktop") - 1})'),
    "large-desktop":
    unquote('(max-width: #{map-get($media-query-values, "large-desktop") - 1})'),
    "x-large-desktop":
    unquote('(max-width: #{map-get($media-query-values, "x-large-desktop") - 1})')
);



/*
@description
A reference of some of the main spacing throughout the site.
Used to maintain consistency.
*/
$spacing: (
    "xs": 0.5rem,
    "s": 1.5rem,
    "m": 2.5rem,
    "l": 3.5rem,
    "xl": 6rem
);



/*
@description
Our initial values for our font sizes used on the site.
NOTE: These values should be mobile-first.
*/
$font-size: (
    "xs":      1.3rem,
    "s":       1.4rem,
    "default": 1.6rem,
    "m":       1.8rem,
    "l":       2.4rem,
    "xl":      3rem
);



/*
@description
Multipliers for font-sizes. See @function scale-font.
*/
$font-scales: (
    "xxs": 0.93,
    "xs":  1.050,
    "s":   1.15,
    "m":   1.3,
    "l":   1.5,
    "xl":  1.6
);



/*
@description
The base gray from which we may lighten to produce other shades of gray.
*/
$base-gray: gray;


/*
@description
The base black from which we may lighten to produce other shades of black.
*/
$base-black: black;


/*
@description
A reference of the common colors used throughout the site.
*/
$color: (
    "white": #fff,
    "highlight": darken(red, 7%),
    "overlay": rgba(#fff, 0.75),
    "overlay-dark": rgba(#000, 0.9),

    "gray":            $base-gray,
    "gray-10": lighten($base-gray, 10%),
    "gray-20": lighten($base-gray, 20%),
    "gray-30": lighten($base-gray, 30%),
    "gray-35": lighten($base-gray, 35%),
    "gray-40": lighten($base-gray, 41%),
    "gray-45": lighten($base-gray, 46%),

    "black":            $base-black,
    "black-10": lighten($base-black, 10%),
    "black-20": lighten($base-black, 20%),
    "black-30": lighten($base-black, 30%),
    "black-40": lighten($base-black, 40%),
    "black-50": lighten($base-black, 50%),
    "black-60": lighten($base-black, 60%),
    "black-70": lighten($base-black, 70%)
);



/*
Some transition speeds...
*/
$transition-speed: (
    "slow": 0.75s,
    "medium": 0.5s,
    "fast": 0.3s
);



/*
The base left and right padding for all our pages and some components.
@mixin return-page-padding provides a mixin to get these values in any
css property.
*/
$page: (
    "padding": 1.5rem,
    "padding-desktop": 7rem
);



/*
Reference for keeping track of z-index levels.
*/
$z-index: (
    "nav": 10,
    "header": 10,
    "drawer": 15,
    "overlay": 20,
    "max": 9999
);



$drawer-width: 32rem;


$gridGutter: 1.2rem;


$gridTextPadding: 2rem;


$miniCartWidth: 320px;
